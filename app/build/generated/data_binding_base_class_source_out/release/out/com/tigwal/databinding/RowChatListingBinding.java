// Generated by view binder compiler. Do not edit!
package com.tigwal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import com.tigwal.R;
import com.tigwal.utils.RoundRectCornerImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowChatListingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView imgLocation;

  @NonNull
  public final RoundRectCornerImageView ivOrderImage;

  @NonNull
  public final LinearLayout llView;

  @NonNull
  public final AppCompatTextView txtLastMessage;

  @NonNull
  public final AppCompatTextView txtLocation;

  @NonNull
  public final AppCompatTextView txtName;

  private RowChatListingBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView imgLocation, @NonNull RoundRectCornerImageView ivOrderImage,
      @NonNull LinearLayout llView, @NonNull AppCompatTextView txtLastMessage,
      @NonNull AppCompatTextView txtLocation, @NonNull AppCompatTextView txtName) {
    this.rootView = rootView;
    this.imgLocation = imgLocation;
    this.ivOrderImage = ivOrderImage;
    this.llView = llView;
    this.txtLastMessage = txtLastMessage;
    this.txtLocation = txtLocation;
    this.txtName = txtName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowChatListingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowChatListingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_chat_listing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowChatListingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgLocation;
      AppCompatImageView imgLocation = rootView.findViewById(id);
      if (imgLocation == null) {
        break missingId;
      }

      id = R.id.iv_order_image;
      RoundRectCornerImageView ivOrderImage = rootView.findViewById(id);
      if (ivOrderImage == null) {
        break missingId;
      }

      id = R.id.llView;
      LinearLayout llView = rootView.findViewById(id);
      if (llView == null) {
        break missingId;
      }

      id = R.id.txtLastMessage;
      AppCompatTextView txtLastMessage = rootView.findViewById(id);
      if (txtLastMessage == null) {
        break missingId;
      }

      id = R.id.txtLocation;
      AppCompatTextView txtLocation = rootView.findViewById(id);
      if (txtLocation == null) {
        break missingId;
      }

      id = R.id.txtName;
      AppCompatTextView txtName = rootView.findViewById(id);
      if (txtName == null) {
        break missingId;
      }

      return new RowChatListingBinding((LinearLayout) rootView, imgLocation, ivOrderImage, llView,
          txtLastMessage, txtLocation, txtName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
