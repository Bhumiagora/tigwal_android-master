// Generated by view binder compiler. Do not edit!
package com.tigwal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import com.tigwal.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopupWindowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView ivPreviewImage;

  @NonNull
  public final CircleImageView ivPreviewRoundUserImage;

  @NonNull
  public final AppCompatImageView ivclose;

  @NonNull
  public final LinearLayout popupView;

  private PopupWindowBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView ivPreviewImage, @NonNull CircleImageView ivPreviewRoundUserImage,
      @NonNull AppCompatImageView ivclose, @NonNull LinearLayout popupView) {
    this.rootView = rootView;
    this.ivPreviewImage = ivPreviewImage;
    this.ivPreviewRoundUserImage = ivPreviewRoundUserImage;
    this.ivclose = ivclose;
    this.popupView = popupView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopupWindowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopupWindowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.popup_window, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopupWindowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivPreviewImage;
      AppCompatImageView ivPreviewImage = rootView.findViewById(id);
      if (ivPreviewImage == null) {
        break missingId;
      }

      id = R.id.ivPreviewRoundUserImage;
      CircleImageView ivPreviewRoundUserImage = rootView.findViewById(id);
      if (ivPreviewRoundUserImage == null) {
        break missingId;
      }

      id = R.id.ivclose;
      AppCompatImageView ivclose = rootView.findViewById(id);
      if (ivclose == null) {
        break missingId;
      }

      LinearLayout popupView = (LinearLayout) rootView;

      return new PopupWindowBinding((LinearLayout) rootView, ivPreviewImage,
          ivPreviewRoundUserImage, ivclose, popupView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
