// Generated by view binder compiler. Do not edit!
package com.tigwal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import com.tigwal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowNotificationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatTextView tvDate;

  @NonNull
  public final AppCompatTextView tvTime;

  @NonNull
  public final AppCompatTextView txtNotificationDesc;

  @NonNull
  public final AppCompatTextView txtNotificationTitle;

  private RowNotificationBinding(@NonNull LinearLayout rootView, @NonNull AppCompatTextView tvDate,
      @NonNull AppCompatTextView tvTime, @NonNull AppCompatTextView txtNotificationDesc,
      @NonNull AppCompatTextView txtNotificationTitle) {
    this.rootView = rootView;
    this.tvDate = tvDate;
    this.tvTime = tvTime;
    this.txtNotificationDesc = txtNotificationDesc;
    this.txtNotificationTitle = txtNotificationTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvDate;
      AppCompatTextView tvDate = rootView.findViewById(id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tvTime;
      AppCompatTextView tvTime = rootView.findViewById(id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.txt_notification_desc;
      AppCompatTextView txtNotificationDesc = rootView.findViewById(id);
      if (txtNotificationDesc == null) {
        break missingId;
      }

      id = R.id.txt_notification_title;
      AppCompatTextView txtNotificationTitle = rootView.findViewById(id);
      if (txtNotificationTitle == null) {
        break missingId;
      }

      return new RowNotificationBinding((LinearLayout) rootView, tvDate, tvTime,
          txtNotificationDesc, txtNotificationTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
