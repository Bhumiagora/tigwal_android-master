// Generated by view binder compiler. Do not edit!
package com.tigwal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import com.tigwal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowOngoingListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llStatusView;

  @NonNull
  public final LinearLayout llshow;

  @NonNull
  public final AppCompatTextView tvOrderId;

  @NonNull
  public final AppCompatTextView tvOrderStatus;

  @NonNull
  public final AppCompatTextView tvTotalCharges;

  @NonNull
  public final AppCompatTextView tvTotalItems;

  @NonNull
  public final AppCompatTextView txtCancelOrder;

  @NonNull
  public final AppCompatTextView txtCancelOrderDate;

  @NonNull
  public final AppCompatTextView txtCancelOrderId;

  @NonNull
  public final AppCompatTextView txtCancelOrderTime;

  @NonNull
  public final AppCompatTextView txtCancelTotalOrder;

  @NonNull
  public final AppCompatTextView txtName;

  @NonNull
  public final AppCompatTextView txtOrderStatus;

  @NonNull
  public final AppCompatTextView txtOrderSummary;

  @NonNull
  public final AppCompatTextView txtOrderTotalCharge;

  private RowOngoingListBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout llStatusView,
      @NonNull LinearLayout llshow, @NonNull AppCompatTextView tvOrderId,
      @NonNull AppCompatTextView tvOrderStatus, @NonNull AppCompatTextView tvTotalCharges,
      @NonNull AppCompatTextView tvTotalItems, @NonNull AppCompatTextView txtCancelOrder,
      @NonNull AppCompatTextView txtCancelOrderDate, @NonNull AppCompatTextView txtCancelOrderId,
      @NonNull AppCompatTextView txtCancelOrderTime, @NonNull AppCompatTextView txtCancelTotalOrder,
      @NonNull AppCompatTextView txtName, @NonNull AppCompatTextView txtOrderStatus,
      @NonNull AppCompatTextView txtOrderSummary, @NonNull AppCompatTextView txtOrderTotalCharge) {
    this.rootView = rootView;
    this.llStatusView = llStatusView;
    this.llshow = llshow;
    this.tvOrderId = tvOrderId;
    this.tvOrderStatus = tvOrderStatus;
    this.tvTotalCharges = tvTotalCharges;
    this.tvTotalItems = tvTotalItems;
    this.txtCancelOrder = txtCancelOrder;
    this.txtCancelOrderDate = txtCancelOrderDate;
    this.txtCancelOrderId = txtCancelOrderId;
    this.txtCancelOrderTime = txtCancelOrderTime;
    this.txtCancelTotalOrder = txtCancelTotalOrder;
    this.txtName = txtName;
    this.txtOrderStatus = txtOrderStatus;
    this.txtOrderSummary = txtOrderSummary;
    this.txtOrderTotalCharge = txtOrderTotalCharge;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowOngoingListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowOngoingListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_ongoing_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowOngoingListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.llStatusView;
      LinearLayout llStatusView = rootView.findViewById(id);
      if (llStatusView == null) {
        break missingId;
      }

      id = R.id.llshow;
      LinearLayout llshow = rootView.findViewById(id);
      if (llshow == null) {
        break missingId;
      }

      id = R.id.tvOrderId;
      AppCompatTextView tvOrderId = rootView.findViewById(id);
      if (tvOrderId == null) {
        break missingId;
      }

      id = R.id.tvOrderStatus;
      AppCompatTextView tvOrderStatus = rootView.findViewById(id);
      if (tvOrderStatus == null) {
        break missingId;
      }

      id = R.id.tvTotalCharges;
      AppCompatTextView tvTotalCharges = rootView.findViewById(id);
      if (tvTotalCharges == null) {
        break missingId;
      }

      id = R.id.tvTotalItems;
      AppCompatTextView tvTotalItems = rootView.findViewById(id);
      if (tvTotalItems == null) {
        break missingId;
      }

      id = R.id.txtCancelOrder;
      AppCompatTextView txtCancelOrder = rootView.findViewById(id);
      if (txtCancelOrder == null) {
        break missingId;
      }

      id = R.id.txt_cancel_orderDate;
      AppCompatTextView txtCancelOrderDate = rootView.findViewById(id);
      if (txtCancelOrderDate == null) {
        break missingId;
      }

      id = R.id.txt_cancel_orderId;
      AppCompatTextView txtCancelOrderId = rootView.findViewById(id);
      if (txtCancelOrderId == null) {
        break missingId;
      }

      id = R.id.txt_cancel_orderTime;
      AppCompatTextView txtCancelOrderTime = rootView.findViewById(id);
      if (txtCancelOrderTime == null) {
        break missingId;
      }

      id = R.id.txt_cancel_totalOrder;
      AppCompatTextView txtCancelTotalOrder = rootView.findViewById(id);
      if (txtCancelTotalOrder == null) {
        break missingId;
      }

      id = R.id.txtName;
      AppCompatTextView txtName = rootView.findViewById(id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txt_OrderStatus;
      AppCompatTextView txtOrderStatus = rootView.findViewById(id);
      if (txtOrderStatus == null) {
        break missingId;
      }

      id = R.id.txtOrderSummary;
      AppCompatTextView txtOrderSummary = rootView.findViewById(id);
      if (txtOrderSummary == null) {
        break missingId;
      }

      id = R.id.txt_order_totalCharge;
      AppCompatTextView txtOrderTotalCharge = rootView.findViewById(id);
      if (txtOrderTotalCharge == null) {
        break missingId;
      }

      return new RowOngoingListBinding((LinearLayout) rootView, llStatusView, llshow, tvOrderId,
          tvOrderStatus, tvTotalCharges, tvTotalItems, txtCancelOrder, txtCancelOrderDate,
          txtCancelOrderId, txtCancelOrderTime, txtCancelTotalOrder, txtName, txtOrderStatus,
          txtOrderSummary, txtOrderTotalCharge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
