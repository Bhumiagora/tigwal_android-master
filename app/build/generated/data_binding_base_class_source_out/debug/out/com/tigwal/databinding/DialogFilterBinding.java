// Generated by view binder compiler. Do not edit!
package com.tigwal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import com.tigwal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogFilterBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout dialogFilter;

  @NonNull
  public final AppCompatImageView imgClose;

  @NonNull
  public final AppCompatImageView ivHighCost;

  @NonNull
  public final AppCompatImageView ivLowCost;

  @NonNull
  public final LinearLayoutCompat llHighCost;

  @NonNull
  public final LinearLayoutCompat llLowCost;

  @NonNull
  public final AppCompatTextView txtResetFilter;

  private DialogFilterBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout dialogFilter, @NonNull AppCompatImageView imgClose,
      @NonNull AppCompatImageView ivHighCost, @NonNull AppCompatImageView ivLowCost,
      @NonNull LinearLayoutCompat llHighCost, @NonNull LinearLayoutCompat llLowCost,
      @NonNull AppCompatTextView txtResetFilter) {
    this.rootView = rootView;
    this.dialogFilter = dialogFilter;
    this.imgClose = imgClose;
    this.ivHighCost = ivHighCost;
    this.ivLowCost = ivLowCost;
    this.llHighCost = llHighCost;
    this.llLowCost = llLowCost;
    this.txtResetFilter = txtResetFilter;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout dialogFilter = (RelativeLayout) rootView;

      id = R.id.imgClose;
      AppCompatImageView imgClose = rootView.findViewById(id);
      if (imgClose == null) {
        break missingId;
      }

      id = R.id.ivHighCost;
      AppCompatImageView ivHighCost = rootView.findViewById(id);
      if (ivHighCost == null) {
        break missingId;
      }

      id = R.id.ivLowCost;
      AppCompatImageView ivLowCost = rootView.findViewById(id);
      if (ivLowCost == null) {
        break missingId;
      }

      id = R.id.llHighCost;
      LinearLayoutCompat llHighCost = rootView.findViewById(id);
      if (llHighCost == null) {
        break missingId;
      }

      id = R.id.llLowCost;
      LinearLayoutCompat llLowCost = rootView.findViewById(id);
      if (llLowCost == null) {
        break missingId;
      }

      id = R.id.txtResetFilter;
      AppCompatTextView txtResetFilter = rootView.findViewById(id);
      if (txtResetFilter == null) {
        break missingId;
      }

      return new DialogFilterBinding((RelativeLayout) rootView, dialogFilter, imgClose, ivHighCost,
          ivLowCost, llHighCost, llLowCost, txtResetFilter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
