// Generated by view binder compiler. Do not edit!
package com.tigwal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import com.tigwal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutCancelOrderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LayoutToolbarBinding toolBar;

  @NonNull
  public final AppCompatTextView txtCancelOrderDate;

  @NonNull
  public final AppCompatTextView txtCancelOrderId;

  @NonNull
  public final AppCompatTextView txtCancelOrderTime;

  @NonNull
  public final AppCompatTextView txtCancelTotalOrder;

  private LayoutCancelOrderBinding(@NonNull LinearLayout rootView,
      @NonNull LayoutToolbarBinding toolBar, @NonNull AppCompatTextView txtCancelOrderDate,
      @NonNull AppCompatTextView txtCancelOrderId, @NonNull AppCompatTextView txtCancelOrderTime,
      @NonNull AppCompatTextView txtCancelTotalOrder) {
    this.rootView = rootView;
    this.toolBar = toolBar;
    this.txtCancelOrderDate = txtCancelOrderDate;
    this.txtCancelOrderId = txtCancelOrderId;
    this.txtCancelOrderTime = txtCancelOrderTime;
    this.txtCancelTotalOrder = txtCancelTotalOrder;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutCancelOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutCancelOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_cancel_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutCancelOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.toolBar;
      View toolBar = rootView.findViewById(id);
      if (toolBar == null) {
        break missingId;
      }
      LayoutToolbarBinding binding_toolBar = LayoutToolbarBinding.bind(toolBar);

      id = R.id.txt_cancel_orderDate;
      AppCompatTextView txtCancelOrderDate = rootView.findViewById(id);
      if (txtCancelOrderDate == null) {
        break missingId;
      }

      id = R.id.txt_cancel_orderId;
      AppCompatTextView txtCancelOrderId = rootView.findViewById(id);
      if (txtCancelOrderId == null) {
        break missingId;
      }

      id = R.id.txt_cancel_orderTime;
      AppCompatTextView txtCancelOrderTime = rootView.findViewById(id);
      if (txtCancelOrderTime == null) {
        break missingId;
      }

      id = R.id.txt_cancel_totalOrder;
      AppCompatTextView txtCancelTotalOrder = rootView.findViewById(id);
      if (txtCancelTotalOrder == null) {
        break missingId;
      }

      return new LayoutCancelOrderBinding((LinearLayout) rootView, binding_toolBar,
          txtCancelOrderDate, txtCancelOrderId, txtCancelOrderTime, txtCancelTotalOrder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
