// Generated by view binder compiler. Do not edit!
package com.tigwal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import com.tigwal.R;
import com.tigwal.utils.RoundRectCornerImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowCartItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatTextView cartItemNotes;

  @NonNull
  public final AppCompatImageView imgCartDelete;

  @NonNull
  public final AppCompatTextView ivCartMinus;

  @NonNull
  public final AppCompatTextView ivCartPlus;

  @NonNull
  public final RoundRectCornerImageView ivCartProductImage;

  @NonNull
  public final LinearLayout llCartAddNote;

  @NonNull
  public final LinearLayout llDiscount;

  @NonNull
  public final AppCompatTextView totalCalculatePrice;

  @NonNull
  public final AppCompatTextView txtAddNote;

  @NonNull
  public final AppCompatTextView txtBookingDate;

  @NonNull
  public final AppCompatTextView txtCartLocation;

  @NonNull
  public final AppCompatTextView txtCartPrice;

  @NonNull
  public final AppCompatTextView txtCartProductName;

  @NonNull
  public final AppCompatTextView txtCartTotalItem;

  @NonNull
  public final AppCompatTextView txtDiscount;

  @NonNull
  public final AppCompatTextView txtDiscountPercentage;

  @NonNull
  public final AppCompatTextView txtDiscountTitle;

  @NonNull
  public final AppCompatTextView txtPerPerson;

  @NonNull
  public final AppCompatTextView txtPrice;

  @NonNull
  public final AppCompatTextView txtServiceProviderName;

  @NonNull
  public final AppCompatTextView txtTimeSlot;

  @NonNull
  public final AppCompatTextView txtTotalPriceTitle;

  @NonNull
  public final AppCompatTextView txtslesh;

  private RowCartItemBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatTextView cartItemNotes, @NonNull AppCompatImageView imgCartDelete,
      @NonNull AppCompatTextView ivCartMinus, @NonNull AppCompatTextView ivCartPlus,
      @NonNull RoundRectCornerImageView ivCartProductImage, @NonNull LinearLayout llCartAddNote,
      @NonNull LinearLayout llDiscount, @NonNull AppCompatTextView totalCalculatePrice,
      @NonNull AppCompatTextView txtAddNote, @NonNull AppCompatTextView txtBookingDate,
      @NonNull AppCompatTextView txtCartLocation, @NonNull AppCompatTextView txtCartPrice,
      @NonNull AppCompatTextView txtCartProductName, @NonNull AppCompatTextView txtCartTotalItem,
      @NonNull AppCompatTextView txtDiscount, @NonNull AppCompatTextView txtDiscountPercentage,
      @NonNull AppCompatTextView txtDiscountTitle, @NonNull AppCompatTextView txtPerPerson,
      @NonNull AppCompatTextView txtPrice, @NonNull AppCompatTextView txtServiceProviderName,
      @NonNull AppCompatTextView txtTimeSlot, @NonNull AppCompatTextView txtTotalPriceTitle,
      @NonNull AppCompatTextView txtslesh) {
    this.rootView = rootView;
    this.cartItemNotes = cartItemNotes;
    this.imgCartDelete = imgCartDelete;
    this.ivCartMinus = ivCartMinus;
    this.ivCartPlus = ivCartPlus;
    this.ivCartProductImage = ivCartProductImage;
    this.llCartAddNote = llCartAddNote;
    this.llDiscount = llDiscount;
    this.totalCalculatePrice = totalCalculatePrice;
    this.txtAddNote = txtAddNote;
    this.txtBookingDate = txtBookingDate;
    this.txtCartLocation = txtCartLocation;
    this.txtCartPrice = txtCartPrice;
    this.txtCartProductName = txtCartProductName;
    this.txtCartTotalItem = txtCartTotalItem;
    this.txtDiscount = txtDiscount;
    this.txtDiscountPercentage = txtDiscountPercentage;
    this.txtDiscountTitle = txtDiscountTitle;
    this.txtPerPerson = txtPerPerson;
    this.txtPrice = txtPrice;
    this.txtServiceProviderName = txtServiceProviderName;
    this.txtTimeSlot = txtTimeSlot;
    this.txtTotalPriceTitle = txtTotalPriceTitle;
    this.txtslesh = txtslesh;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowCartItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowCartItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_cart_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowCartItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cartItemNotes;
      AppCompatTextView cartItemNotes = rootView.findViewById(id);
      if (cartItemNotes == null) {
        break missingId;
      }

      id = R.id.imgCartDelete;
      AppCompatImageView imgCartDelete = rootView.findViewById(id);
      if (imgCartDelete == null) {
        break missingId;
      }

      id = R.id.iv_cart_minus;
      AppCompatTextView ivCartMinus = rootView.findViewById(id);
      if (ivCartMinus == null) {
        break missingId;
      }

      id = R.id.iv_cart_plus;
      AppCompatTextView ivCartPlus = rootView.findViewById(id);
      if (ivCartPlus == null) {
        break missingId;
      }

      id = R.id.iv_cart_productImage;
      RoundRectCornerImageView ivCartProductImage = rootView.findViewById(id);
      if (ivCartProductImage == null) {
        break missingId;
      }

      id = R.id.ll_cart_addNote;
      LinearLayout llCartAddNote = rootView.findViewById(id);
      if (llCartAddNote == null) {
        break missingId;
      }

      id = R.id.llDiscount;
      LinearLayout llDiscount = rootView.findViewById(id);
      if (llDiscount == null) {
        break missingId;
      }

      id = R.id.totalCalculatePrice;
      AppCompatTextView totalCalculatePrice = rootView.findViewById(id);
      if (totalCalculatePrice == null) {
        break missingId;
      }

      id = R.id.txtAddNote;
      AppCompatTextView txtAddNote = rootView.findViewById(id);
      if (txtAddNote == null) {
        break missingId;
      }

      id = R.id.txtBookingDate;
      AppCompatTextView txtBookingDate = rootView.findViewById(id);
      if (txtBookingDate == null) {
        break missingId;
      }

      id = R.id.txt_cart_location;
      AppCompatTextView txtCartLocation = rootView.findViewById(id);
      if (txtCartLocation == null) {
        break missingId;
      }

      id = R.id.txt_cart_price;
      AppCompatTextView txtCartPrice = rootView.findViewById(id);
      if (txtCartPrice == null) {
        break missingId;
      }

      id = R.id.txt_cart_productName;
      AppCompatTextView txtCartProductName = rootView.findViewById(id);
      if (txtCartProductName == null) {
        break missingId;
      }

      id = R.id.txt_cart_total_item;
      AppCompatTextView txtCartTotalItem = rootView.findViewById(id);
      if (txtCartTotalItem == null) {
        break missingId;
      }

      id = R.id.txtDiscount;
      AppCompatTextView txtDiscount = rootView.findViewById(id);
      if (txtDiscount == null) {
        break missingId;
      }

      id = R.id.txtDiscountPercentage;
      AppCompatTextView txtDiscountPercentage = rootView.findViewById(id);
      if (txtDiscountPercentage == null) {
        break missingId;
      }

      id = R.id.txtDiscountTitle;
      AppCompatTextView txtDiscountTitle = rootView.findViewById(id);
      if (txtDiscountTitle == null) {
        break missingId;
      }

      id = R.id.txtPerPerson;
      AppCompatTextView txtPerPerson = rootView.findViewById(id);
      if (txtPerPerson == null) {
        break missingId;
      }

      id = R.id.txtPrice;
      AppCompatTextView txtPrice = rootView.findViewById(id);
      if (txtPrice == null) {
        break missingId;
      }

      id = R.id.txtServiceProviderName;
      AppCompatTextView txtServiceProviderName = rootView.findViewById(id);
      if (txtServiceProviderName == null) {
        break missingId;
      }

      id = R.id.txtTimeSlot;
      AppCompatTextView txtTimeSlot = rootView.findViewById(id);
      if (txtTimeSlot == null) {
        break missingId;
      }

      id = R.id.txtTotalPriceTitle;
      AppCompatTextView txtTotalPriceTitle = rootView.findViewById(id);
      if (txtTotalPriceTitle == null) {
        break missingId;
      }

      id = R.id.txtslesh;
      AppCompatTextView txtslesh = rootView.findViewById(id);
      if (txtslesh == null) {
        break missingId;
      }

      return new RowCartItemBinding((LinearLayout) rootView, cartItemNotes, imgCartDelete,
          ivCartMinus, ivCartPlus, ivCartProductImage, llCartAddNote, llDiscount,
          totalCalculatePrice, txtAddNote, txtBookingDate, txtCartLocation, txtCartPrice,
          txtCartProductName, txtCartTotalItem, txtDiscount, txtDiscountPercentage,
          txtDiscountTitle, txtPerPerson, txtPrice, txtServiceProviderName, txtTimeSlot,
          txtTotalPriceTitle, txtslesh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
